---
import Layout from '../layouts/Layout.astro';
---

<Layout title="Ultrasound Focusing Visualization" description="Interactive ultrasound array focusing visualization with real-time parameter control">
  <div class="visualization-container">
    <div class="page-header">
      <h1>üîä Ultrasound Array Focusing Visualization</h1>
      <p>Explore how ultrasound transducer arrays focus acoustic energy through precise timing control. Adjust parameters in real-time to see how they affect the focused beam pattern.</p>
    </div>

    <form id="controls" class="controls-panel">
      <fieldset>
        <legend>Animation Timing</legend>
        <div class="control-group">
          <label>
            Speed of Sound (px/s):
            <input
              type="number"
              id="speedOfSound"
              value="100"
              step="10"
              min="20"
              max="500"
            />
            <small style="display: block; color: #666; margin-top: 2px;">
              Controls animation speed - lower is slower, higher is faster
            </small>
          </label>
          <label>
            Current Time (seconds):
            <input
              type="number"
              id="currentTime"
              value="0"
              step="0.00001"
              min="0"
            />
          </label>
          <label>
            Movie Duration (seconds):
            <input
              type="number"
              id="movieDuration"
              value="3.0"
              step="0.5"
              min="1.0"
            />
          </label>
        </div>
      </fieldset>

      <fieldset>
        <legend>Transducer Parameters</legend>
        <div class="control-group">
          <label>
            Number of elements:
            <input
              type="number"
              id="numElements"
              value="16"
              min="4"
              max="64"
              step="1"
            />
          </label>
          <label>
            Pitch (px):
            <input
              type="number"
              id="pitch"
              value="50"
              step="5"
              min="10"
            />
          </label>
        </div>
        <small>Pitch: distance between element centers</small>
      </fieldset>

      <fieldset>
        <legend>üéØ Focusing Target</legend>
        <div class="control-group">
          <label>
            <input
              type="radio"
              name="targetType"
              value="linear"
              checked
            />
            Linear (parallel beams)
          </label>
          <label>
            <input type="radio" name="targetType" value="point" />
            Point focus
          </label>
        </div>

        <div id="linearControls">
          <div class="control-group">
            <label>
              Beam angle (¬∞):
              <input type="number" id="angle" value="0" step="0.1" />
            </label>
          </div>
          <small>All elements fire with same delay for parallel beams</small>
        </div>

        <div id="pointControls" style="display: none">
          <div class="control-group">
            <label>
              Target X (px):
              <input
                type="number"
                id="targetX"
                value="400"
                step="1"
                min="0"
                max="640"
              />
            </label>
            <label>
              Target Y (px):
              <input
                type="number"
                id="targetY"
                value="240"
                step="1"
                min="0"
                max="480"
              />
            </label>
          </div>
          <small>üí° Click on canvas to set target point | Coordinate system: (0,0) at top-left</small>
          <div id="targetStatus" style="margin-top: 10px;">
            <span class="status-indicator status-neutral"></span>
            <span id="targetStatusText">Set target coordinates</span>
          </div>
        </div>
      </fieldset>

      <div class="button-group">
        <button type="button" id="generate">Generate Frame</button>
        <button type="button" id="playMovie">Play Movie</button>
      </div>
    </form>

    <div id="movie" class="visualization-panel">
      <h3>üé¨ Animation Canvas</h3>
      <canvas
        id="animationCanvas"
        width="640"
        height="480"
        title="Click to set target point when Point focus is selected"
      ></canvas>

      <div id="coordinateInfo">
        <strong>Canvas Information:</strong><br>
        ‚Ä¢ Canvas size: 640√ó480 pixels<br>
        ‚Ä¢ Element position: ~40% from left edge (‚âà256px)<br>
        ‚Ä¢ Current mouse position: <span id="mouseCoords">(hover over canvas)</span><br>
        ‚Ä¢ Wave visualization speed: <span id="currentSpeed">100</span> px/sec<br>
        ‚Ä¢ Green circle = wave convergence at target
      </div>

      <div class="movie-controls">
        <button id="prevFrame">‚èÆ Prev Frame</button>
        <button id="nextFrame">Next Frame ‚è≠</button>
        <button id="downloadFrame">üíæ Download Frame</button>
        <button id="downloadMovie">üé• Download Movie</button>
      </div>

      <div class="download-info">
        <strong>Download Movie:</strong> Chrome/Firefox download WebM videos. Safari downloads MP4 videos. Both playable in VLC/QuickTime.
      </div>
    </div>
  </div>

  <script>
    import { initializeUI, updateSpeedDisplay } from '../main.ts';

    // Initialize when DOM is ready
    if (document.readyState === "loading") {
      document.addEventListener("DOMContentLoaded", () => {
        initializeUI();
        updateSpeedDisplay();
      });
    } else {
      initializeUI();
      updateSpeedDisplay();
    }
  </script>
</Layout>

<style>
  .visualization-container {
    max-width: none;
    padding: 0;
  }

  .page-header {
    text-align: center;
    margin-bottom: 2rem;
    padding: 2rem;
    background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);
    border-radius: 12px;
  }

  .page-header h1 {
    font-size: 2.5rem;
    margin: 0 0 1rem 0;
    color: #1e293b;
  }

  .page-header p {
    font-size: 1.125rem;
    color: #64748b;
    margin: 0;
    max-width: 800px;
    margin-left: auto;
    margin-right: auto;
    line-height: 1.7;
  }

  .controls-panel {
    background: white;
    padding: 2rem;
    border-radius: 12px;
    box-shadow: 0 4px 6px rgba(0,0,0,0.05);
    border: 1px solid #e2e8f0;
    margin-bottom: 2rem;
  }

  fieldset {
    border: 1px solid #e2e8f0;
    border-radius: 8px;
    margin-bottom: 1.5rem;
    padding: 1.5rem;
    background: #f8fafc;
  }

  legend {
    font-weight: 600;
    color: #1e293b;
    padding: 0 1rem;
    background: white;
    border-radius: 4px;
    border: 1px solid #e2e8f0;
  }

  .control-group {
    display: flex;
    flex-wrap: wrap;
    gap: 1.5rem;
    align-items: center;
    margin-bottom: 1rem;
  }

  .control-group:last-child {
    margin-bottom: 0;
  }

  .control-group label {
    margin-bottom: 0;
    display: flex;
    align-items: center;
    gap: 0.5rem;
    color: #374151;
    font-weight: 500;
  }

  input[type="number"] {
    width: 120px;
    padding: 0.5rem;
    border: 1px solid #d1d5db;
    border-radius: 6px;
    font-size: 0.875rem;
    transition: border-color 0.3s ease;
  }

  input[type="number"]:focus {
    outline: none;
    border-color: #06b6d4;
    box-shadow: 0 0 0 3px rgba(6, 182, 212, 0.1);
  }

  input[type="radio"] {
    margin-right: 0.5rem;
    accent-color: #06b6d4;
  }

  small {
    color: #6b7280;
    font-style: italic;
    font-size: 0.875rem;
  }

  .status-indicator {
    display: inline-block;
    width: 10px;
    height: 10px;
    border-radius: 50%;
    margin-right: 0.5rem;
  }

  .status-valid { background-color: #10b981; }
  .status-invalid { background-color: #ef4444; }
  .status-neutral { background-color: #6b7280; }

  .button-group {
    display: flex;
    gap: 1rem;
    flex-wrap: wrap;
    justify-content: center;
    margin-top: 1.5rem;
  }

  button {
    background: #06b6d4;
    color: white;
    border: none;
    padding: 0.75rem 1.5rem;
    border-radius: 8px;
    cursor: pointer;
    font-weight: 500;
    transition: all 0.3s ease;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
  }

  button:hover {
    background: #0891b2;
    transform: translateY(-1px);
    box-shadow: 0 4px 8px rgba(0,0,0,0.15);
  }

  button:disabled {
    background: #9ca3af;
    cursor: not-allowed;
    transform: none;
    box-shadow: none;
  }

  .visualization-panel {
    background: white;
    padding: 2rem;
    border-radius: 12px;
    box-shadow: 0 4px 6px rgba(0,0,0,0.05);
    border: 1px solid #e2e8f0;
    text-align: center;
  }

  .visualization-panel h3 {
    margin: 0 0 1.5rem 0;
    color: #1e293b;
    font-size: 1.5rem;
  }

  #animationCanvas {
    border: 2px solid #1e293b;
    border-radius: 8px;
    cursor: crosshair;
    background-color: white;
    box-shadow: 0 4px 8px rgba(0,0,0,0.1);
  }

  #coordinateInfo {
    margin: 1.5rem auto;
    padding: 1rem;
    background-color: #f1f5f9;
    border-radius: 8px;
    font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace;
    font-size: 0.75rem;
    text-align: left;
    max-width: 640px;
    color: #374151;
    border: 1px solid #e2e8f0;
  }

  .movie-controls {
    margin: 1.5rem 0;
    display: flex;
    gap: 0.75rem;
    justify-content: center;
    flex-wrap: wrap;
  }

  .movie-controls button {
    font-size: 0.875rem;
    padding: 0.5rem 1rem;
  }

  .download-info {
    margin-top: 1rem;
    font-size: 0.75rem;
    color: #6b7280;
    padding: 1rem;
    background: #f9fafb;
    border-radius: 6px;
    border: 1px solid #e5e7eb;
  }

  @media (max-width: 768px) {
    .page-header {
      padding: 1.5rem 1rem;
    }

    .page-header h1 {
      font-size: 2rem;
    }

    .page-header p {
      font-size: 1rem;
    }

    .controls-panel,
    .visualization-panel {
      padding: 1.5rem;
    }

    .control-group {
      flex-direction: column;
      align-items: flex-start;
      gap: 1rem;
    }

    .control-group label {
      flex-direction: column;
      align-items: flex-start;
      gap: 0.25rem;
    }

    input[type="number"] {
      width: 100%;
      max-width: 200px;
    }

    .button-group,
    .movie-controls {
      flex-direction: column;
      align-items: center;
    }

    .button-group button,
    .movie-controls button {
      width: 100%;
      max-width: 200px;
    }

    #animationCanvas {
      max-width: 100%;
      height: auto;
    }
  }
</style>
